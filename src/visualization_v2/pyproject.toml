[project]
name = "visualization-v2"
version = "0.1.0"
description = "Modular environmental data visualization service"
authors = [
    {name = "Matthias Jordan", email = "hey@iammatthias.com"}
]
dependencies = [
    "asyncio-mqtt>=0.16.0",
    "pillow>=10.0.0",
    "numpy>=1.24.0",
    "matplotlib>=3.7.0",
    "pandas>=2.0.0",
    "supabase>=2.0.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "structlog>=23.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "asyncpg>=0.29.0",
    "requests>=2.31.0",
    "cloudflare>=3.0.0",
    "httpx>=0.27.0",
]
requires-python = ">=3.11"
readme = "README.md"
license = {text = "MIT"}

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]

[project.scripts]
viz-service = "cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.black]
target-version = ['py311']
line-length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.hatch.build.targets.wheel]
packages = ["cli", "core", "data", "generators", "models", "upload"] 